/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Inventory);
  }
}(this, function(expect, Inventory) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Inventory.ExportInventoryControllerApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ExportInventoryControllerApi', function() {
    describe('createExportSettings', function() {
      it('should call createExportSettings successfully', function(done) {
        //uncomment below and update the code to test createExportSettings
        //instance.createExportSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExportSettingsFTP', function() {
      it('should call createExportSettingsFTP successfully', function(done) {
        //uncomment below and update the code to test createExportSettingsFTP
        //instance.createExportSettingsFTP(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExportSettingsS3', function() {
      it('should call createExportSettingsS3 successfully', function(done) {
        //uncomment below and update the code to test createExportSettingsS3
        //instance.createExportSettingsS3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExportSettings', function() {
      it('should call deleteExportSettings successfully', function(done) {
        //uncomment below and update the code to test deleteExportSettings
        //instance.deleteExportSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExportSettingsFTP', function() {
      it('should call deleteExportSettingsFTP successfully', function(done) {
        //uncomment below and update the code to test deleteExportSettingsFTP
        //instance.deleteExportSettingsFTP(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExportSettingsS3', function() {
      it('should call deleteExportSettingsS3 successfully', function(done) {
        //uncomment below and update the code to test deleteExportSettingsS3
        //instance.deleteExportSettingsS3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExportSettings', function() {
      it('should call getExportSettings successfully', function(done) {
        //uncomment below and update the code to test getExportSettings
        //instance.getExportSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runExport', function() {
      it('should call runExport successfully', function(done) {
        //uncomment below and update the code to test runExport
        //instance.runExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExportSettings', function() {
      it('should call updateExportSettings successfully', function(done) {
        //uncomment below and update the code to test updateExportSettings
        //instance.updateExportSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExportSettingsFTP', function() {
      it('should call updateExportSettingsFTP successfully', function(done) {
        //uncomment below and update the code to test updateExportSettingsFTP
        //instance.updateExportSettingsFTP(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExportSettingsS3', function() {
      it('should call updateExportSettingsS3 successfully', function(done) {
        //uncomment below and update the code to test updateExportSettingsS3
        //instance.updateExportSettingsS3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
