/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ProductMapping from '../model/ProductMapping';
import ProductMappingRequest from '../model/ProductMappingRequest';
import ProductMappingResponse from '../model/ProductMappingResponse';

/**
* ProductMappingController service.
* @module api/ProductMappingControllerApi
* @version 5.0
*/
export default class ProductMappingControllerApi {

    /**
    * Constructs a new ProductMappingControllerApi. 
    * @alias module:api/ProductMappingControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createProductMapping operation.
     * @callback module:api/ProductMappingControllerApi~createProductMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Product Mapping
     * @param {Number} xVolTenant Tenant ID
     * @param {module:model/ProductMappingRequest} productMappingRequest Request to work with Product Mappings
     * @param {module:api/ProductMappingControllerApi~createProductMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductMapping}
     */
    createProductMapping(xVolTenant, productMappingRequest, callback) {
      let postBody = productMappingRequest;
      // verify the required parameter 'xVolTenant' is set
      if (xVolTenant === undefined || xVolTenant === null) {
        throw new Error("Missing the required parameter 'xVolTenant' when calling createProductMapping");
      }
      // verify the required parameter 'productMappingRequest' is set
      if (productMappingRequest === undefined || productMappingRequest === null) {
        throw new Error("Missing the required parameter 'productMappingRequest' when calling createProductMapping");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-vol-tenant': xVolTenant
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProductMapping;
      return this.apiClient.callApi(
        '/v1/productMapping', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteProductMapping operation.
     * @callback module:api/ProductMappingControllerApi~deleteProductMappingCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Product Mapping
     * @param {Number} xVolTenant Tenant ID
     * @param {String} direction Direction
     * @param {module:model/ProductMappingRequest} productMappingRequest Request to work with Product Mappings
     * @param {module:api/ProductMappingControllerApi~deleteProductMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    deleteProductMapping(xVolTenant, direction, productMappingRequest, callback) {
      let postBody = productMappingRequest;
      // verify the required parameter 'xVolTenant' is set
      if (xVolTenant === undefined || xVolTenant === null) {
        throw new Error("Missing the required parameter 'xVolTenant' when calling deleteProductMapping");
      }
      // verify the required parameter 'direction' is set
      if (direction === undefined || direction === null) {
        throw new Error("Missing the required parameter 'direction' when calling deleteProductMapping");
      }
      // verify the required parameter 'productMappingRequest' is set
      if (productMappingRequest === undefined || productMappingRequest === null) {
        throw new Error("Missing the required parameter 'productMappingRequest' when calling deleteProductMapping");
      }

      let pathParams = {
        'direction': direction
      };
      let queryParams = {
      };
      let headerParams = {
        'x-vol-tenant': xVolTenant
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'Boolean';
      return this.apiClient.callApi(
        '/v1/productMapping/{direction}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProductMapping operation.
     * @callback module:api/ProductMappingControllerApi~getProductMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProductMappingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list Product Mappings for the specified tenant
     * @param {Number} xVolTenant Tenant ID
     * @param {module:api/ProductMappingControllerApi~getProductMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProductMappingResponse}
     */
    getProductMapping(xVolTenant, callback) {
      let postBody = null;
      // verify the required parameter 'xVolTenant' is set
      if (xVolTenant === undefined || xVolTenant === null) {
        throw new Error("Missing the required parameter 'xVolTenant' when calling getProductMapping");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-vol-tenant': xVolTenant
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductMappingResponse;
      return this.apiClient.callApi(
        '/v1/productMapping', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
