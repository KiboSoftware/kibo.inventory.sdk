/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetPendingItemsResponse from '../model/GetPendingItemsResponse';

/**
* PendingItemsController service.
* @module api/PendingItemsControllerApi
* @version 5.0
*/
export default class PendingItemsControllerApi {

    /**
    * Constructs a new PendingItemsControllerApi. 
    * @alias module:api/PendingItemsControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deletePendingItems operation.
     * @callback module:api/PendingItemsControllerApi~deletePendingItemsCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Pending Items
     * @param {Number} xVolTenant Tenant ID
     * @param {Number} pendingItemID Pending Item ID
     * @param {module:api/PendingItemsControllerApi~deletePendingItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    deletePendingItems(xVolTenant, pendingItemID, callback) {
      let postBody = null;
      // verify the required parameter 'xVolTenant' is set
      if (xVolTenant === undefined || xVolTenant === null) {
        throw new Error("Missing the required parameter 'xVolTenant' when calling deletePendingItems");
      }
      // verify the required parameter 'pendingItemID' is set
      if (pendingItemID === undefined || pendingItemID === null) {
        throw new Error("Missing the required parameter 'pendingItemID' when calling deletePendingItems");
      }

      let pathParams = {
        'pendingItemID': pendingItemID
      };
      let queryParams = {
      };
      let headerParams = {
        'x-vol-tenant': xVolTenant
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'Boolean';
      return this.apiClient.callApi(
        '/v1/pendingItem/{pendingItemID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPendingItems operation.
     * @callback module:api/PendingItemsControllerApi~getPendingItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPendingItemsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Pending Items
     * @param {Number} xVolTenant Tenant ID
     * @param {Object} opts Optional parameters
     * @param {String} opts.locationName Location Name
     * @param {Number} opts.locationID Location Identifier
     * @param {Number} opts.currentPage Current display page
     * @param {Number} opts.numberPerPage Number of items shown per page
     * @param {String} opts.sortBy Field to sort by (enum = {'QUANTITY', 'FROM', 'TO', 'TYPE', 'ORDER_ID', 'WEIGHT'})
     * @param {Number} opts.shipmentID Shipment ID
     * @param {module:api/PendingItemsControllerApi~getPendingItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPendingItemsResponse}
     */
    getPendingItems(xVolTenant, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xVolTenant' is set
      if (xVolTenant === undefined || xVolTenant === null) {
        throw new Error("Missing the required parameter 'xVolTenant' when calling getPendingItems");
      }

      let pathParams = {
      };
      let queryParams = {
        'locationName': opts['locationName'],
        'locationID': opts['locationID'],
        'currentPage': opts['currentPage'],
        'numberPerPage': opts['numberPerPage'],
        'sortBy': opts['sortBy'],
        'shipmentID': opts['shipmentID']
      };
      let headerParams = {
        'x-vol-tenant': xVolTenant
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetPendingItemsResponse;
      return this.apiClient.callApi(
        '/v1/pendingItem/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
