/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AllocateInventoryRequest from '../model/AllocateInventoryRequest';
import BaseResponse from '../model/BaseResponse';
import InlineResponse500 from '../model/InlineResponse500';
import JobQueueResponse from '../model/JobQueueResponse';

/**
* AllocationController service.
* @module api/AllocationControllerApi
* @version 5.0
*/
export default class AllocationControllerApi {

    /**
    * Constructs a new AllocationControllerApi. 
    * @alias module:api/AllocationControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the allocateInventory operation.
     * @callback module:api/AllocationControllerApi~allocateInventoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JobQueueResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Allocates inventory based on the given request
     * @param {Number} xVolTenant Tenant ID
     * @param {module:model/AllocateInventoryRequest} allocateInventoryRequest Request to allocate inventory
     * @param {module:api/AllocationControllerApi~allocateInventoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JobQueueResponse}
     */
    allocateInventory(xVolTenant, allocateInventoryRequest, callback) {
      let postBody = allocateInventoryRequest;
      // verify the required parameter 'xVolTenant' is set
      if (xVolTenant === undefined || xVolTenant === null) {
        throw new Error("Missing the required parameter 'xVolTenant' when calling allocateInventory");
      }
      // verify the required parameter 'allocateInventoryRequest' is set
      if (allocateInventoryRequest === undefined || allocateInventoryRequest === null) {
        throw new Error("Missing the required parameter 'allocateInventoryRequest' when calling allocateInventory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-vol-tenant': xVolTenant
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = JobQueueResponse;
      return this.apiClient.callApi(
        '/v5/inventory/allocate/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deallocateInventory operation.
     * @callback module:api/AllocationControllerApi~deallocateInventoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deallocates inventory based on the given request
     * @param {Number} xVolTenant Tenant ID
     * @param {module:model/AllocateInventoryRequest} allocateInventoryRequest Request to allocate inventory
     * @param {module:api/AllocationControllerApi~deallocateInventoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponse}
     */
    deallocateInventory(xVolTenant, allocateInventoryRequest, callback) {
      let postBody = allocateInventoryRequest;
      // verify the required parameter 'xVolTenant' is set
      if (xVolTenant === undefined || xVolTenant === null) {
        throw new Error("Missing the required parameter 'xVolTenant' when calling deallocateInventory");
      }
      // verify the required parameter 'allocateInventoryRequest' is set
      if (allocateInventoryRequest === undefined || allocateInventoryRequest === null) {
        throw new Error("Missing the required parameter 'allocateInventoryRequest' when calling deallocateInventory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-vol-tenant': xVolTenant
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BaseResponse;
      return this.apiClient.callApi(
        '/v5/inventory/deallocate/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the fulfillInventory operation.
     * @callback module:api/AllocationControllerApi~fulfillInventoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BaseResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fulfills inventory based on the given request
     * @param {Number} xVolTenant Tenant ID
     * @param {module:model/AllocateInventoryRequest} allocateInventoryRequest Request to allocate inventory
     * @param {module:api/AllocationControllerApi~fulfillInventoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BaseResponse}
     */
    fulfillInventory(xVolTenant, allocateInventoryRequest, callback) {
      let postBody = allocateInventoryRequest;
      // verify the required parameter 'xVolTenant' is set
      if (xVolTenant === undefined || xVolTenant === null) {
        throw new Error("Missing the required parameter 'xVolTenant' when calling fulfillInventory");
      }
      // verify the required parameter 'allocateInventoryRequest' is set
      if (allocateInventoryRequest === undefined || allocateInventoryRequest === null) {
        throw new Error("Missing the required parameter 'allocateInventoryRequest' when calling fulfillInventory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-vol-tenant': xVolTenant
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BaseResponse;
      return this.apiClient.callApi(
        '/v5/inventory/fulfill/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
