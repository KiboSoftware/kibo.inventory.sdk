/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobQueueResponse model module.
 * @module model/JobQueueResponse
 * @version 5.0
 */
class JobQueueResponse {
    /**
     * Constructs a new <code>JobQueueResponse</code>.
     * Response for getting a job
     * @alias module:model/JobQueueResponse
     */
    constructor() { 
        
        JobQueueResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobQueueResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobQueueResponse} obj Optional instance to populate.
     * @return {module:model/JobQueueResponse} The populated <code>JobQueueResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobQueueResponse();

            if (data.hasOwnProperty('jobID')) {
                obj['jobID'] = ApiClient.convertToType(data['jobID'], 'Number');
            }
            if (data.hasOwnProperty('tenantID')) {
                obj['tenantID'] = ApiClient.convertToType(data['tenantID'], 'Number');
            }
            if (data.hasOwnProperty('locationID')) {
                obj['locationID'] = ApiClient.convertToType(data['locationID'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('added')) {
                obj['added'] = ApiClient.convertToType(data['added'], 'String');
            }
            if (data.hasOwnProperty('started')) {
                obj['started'] = ApiClient.convertToType(data['started'], 'String');
            }
            if (data.hasOwnProperty('finished')) {
                obj['finished'] = ApiClient.convertToType(data['finished'], 'String');
            }
            if (data.hasOwnProperty('originalFilename')) {
                obj['originalFilename'] = ApiClient.convertToType(data['originalFilename'], 'String');
            }
            if (data.hasOwnProperty('hasData')) {
                obj['hasData'] = ApiClient.convertToType(data['hasData'], 'Boolean');
            }
            if (data.hasOwnProperty('itemCount')) {
                obj['itemCount'] = ApiClient.convertToType(data['itemCount'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Internal identifier that uniquely identifies a single job
 * @member {Number} jobID
 */
JobQueueResponse.prototype['jobID'] = undefined;

/**
 * Unique internal identifier of the tenant that owns the job
 * @member {Number} tenantID
 */
JobQueueResponse.prototype['tenantID'] = undefined;

/**
 * Unique internal Identifier of the owning location
 * @member {Number} locationID
 */
JobQueueResponse.prototype['locationID'] = undefined;

/**
 * Purpose of the job
 * @member {module:model/JobQueueResponse.TypeEnum} type
 */
JobQueueResponse.prototype['type'] = undefined;

/**
 * Time and date the job was added to the queue in ISO8601 format in UTC
 * @member {String} added
 */
JobQueueResponse.prototype['added'] = undefined;

/**
 * Time and date the job was started in ISO8601 format in UTC
 * @member {String} started
 */
JobQueueResponse.prototype['started'] = undefined;

/**
 * Time and date the job was finished in ISO8601 format in UTC
 * @member {String} finished
 */
JobQueueResponse.prototype['finished'] = undefined;

/**
 * The full name of the file that was picked up at the secure droppoint server before being split up by location. Applies only to refresh and adjust jobs created via file fetch process
 * @member {String} originalFilename
 */
JobQueueResponse.prototype['originalFilename'] = undefined;

/**
 * True if the job was not created from a fetched file
 * @member {Boolean} hasData
 */
JobQueueResponse.prototype['hasData'] = undefined;

/**
 * The number of items processed, only for job types REFRESH and ADJUST
 * @member {Number} itemCount
 */
JobQueueResponse.prototype['itemCount'] = undefined;

/**
 * Current status of job completion
 * @member {module:model/JobQueueResponse.StatusEnum} status
 */
JobQueueResponse.prototype['status'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
JobQueueResponse['TypeEnum'] = {

    /**
     * value: "REFRESH"
     * @const
     */
    "REFRESH": "REFRESH",

    /**
     * value: "ADJUST"
     * @const
     */
    "ADJUST": "ADJUST",

    /**
     * value: "RELEASE_SHIPMENTS"
     * @const
     */
    "RELEASE_SHIPMENTS": "RELEASE_SHIPMENTS",

    /**
     * value: "CREATE_PICK_WAVE"
     * @const
     */
    "CREATE_PICK_WAVE": "CREATE_PICK_WAVE",

    /**
     * value: "CLOSE_PICK_WAVE"
     * @const
     */
    "CLOSE_PICK_WAVE": "CLOSE_PICK_WAVE",

    /**
     * value: "PUT_AWAY_FILE"
     * @const
     */
    "PUT_AWAY_FILE": "PUT_AWAY_FILE",

    /**
     * value: "SHORT_PICK_ERROR"
     * @const
     */
    "SHORT_PICK_ERROR": "SHORT_PICK_ERROR",

    /**
     * value: "BIN_AUDIT_START"
     * @const
     */
    "BIN_AUDIT_START": "BIN_AUDIT_START",

    /**
     * value: "BIN_AUDIT_COMPLETION"
     * @const
     */
    "BIN_AUDIT_COMPLETION": "BIN_AUDIT_COMPLETION",

    /**
     * value: "CREATE_BIN_AUDIT"
     * @const
     */
    "CREATE_BIN_AUDIT": "CREATE_BIN_AUDIT",

    /**
     * value: "RELEASE_PENDING_ITEMS"
     * @const
     */
    "RELEASE_PENDING_ITEMS": "RELEASE_PENDING_ITEMS"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
JobQueueResponse['StatusEnum'] = {

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "WORKING"
     * @const
     */
    "WORKING": "WORKING",

    /**
     * value: "SUCCESS"
     * @const
     */
    "SUCCESS": "SUCCESS",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default JobQueueResponse;

