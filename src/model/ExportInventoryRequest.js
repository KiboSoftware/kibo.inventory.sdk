/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportInventoryRequest model module.
 * @module model/ExportInventoryRequest
 * @version 5.0
 */
class ExportInventoryRequest {
    /**
     * Constructs a new <code>ExportInventoryRequest</code>.
     * Export Inventory Request
     * @alias module:model/ExportInventoryRequest
     */
    constructor() { 
        
        ExportInventoryRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportInventoryRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportInventoryRequest} obj Optional instance to populate.
     * @return {module:model/ExportInventoryRequest} The populated <code>ExportInventoryRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportInventoryRequest();

            if (data.hasOwnProperty('exportSettingsName')) {
                obj['exportSettingsName'] = ApiClient.convertToType(data['exportSettingsName'], 'String');
            }
            if (data.hasOwnProperty('exportSettingsFTPName')) {
                obj['exportSettingsFTPName'] = ApiClient.convertToType(data['exportSettingsFTPName'], 'String');
            }
            if (data.hasOwnProperty('exportSettingsS3Name')) {
                obj['exportSettingsS3Name'] = ApiClient.convertToType(data['exportSettingsS3Name'], 'String');
            }
            if (data.hasOwnProperty('development')) {
                obj['development'] = ApiClient.convertToType(data['development'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Name of the Export Settings to use
 * @member {String} exportSettingsName
 */
ExportInventoryRequest.prototype['exportSettingsName'] = undefined;

/**
 * Name of the FTP Settings to use. Will only check for this if exportID is already set
 * @member {String} exportSettingsFTPName
 */
ExportInventoryRequest.prototype['exportSettingsFTPName'] = undefined;

/**
 * Name of the S3 Settings to use. Will only check for this if exportID is already set
 * @member {String} exportSettingsS3Name
 */
ExportInventoryRequest.prototype['exportSettingsS3Name'] = undefined;

/**
 * Flag for sending the exports to the development droppoint
 * @member {Boolean} development
 */
ExportInventoryRequest.prototype['development'] = undefined;






export default ExportInventoryRequest;

