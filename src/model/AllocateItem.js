/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AllocateItem model module.
 * @module model/AllocateItem
 * @version 5.0
 */
class AllocateItem {
    /**
     * Constructs a new <code>AllocateItem</code>.
     * Item for Allocation
     * @alias module:model/AllocateItem
     * @param quantity {Number} quantity
     * @param orderID {Number} order ID
     * @param orderItemID {Number} order item ID
     * @param shipmentID {Number} shipment ID
     */
    constructor(quantity, orderID, orderItemID, shipmentID) { 
        
        AllocateItem.initialize(this, quantity, orderID, orderItemID, shipmentID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, quantity, orderID, orderItemID, shipmentID) { 
        obj['quantity'] = quantity;
        obj['orderID'] = orderID;
        obj['orderItemID'] = orderItemID;
        obj['shipmentID'] = shipmentID;
    }

    /**
     * Constructs a <code>AllocateItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllocateItem} obj Optional instance to populate.
     * @return {module:model/AllocateItem} The populated <code>AllocateItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllocateItem();

            if (data.hasOwnProperty('partNumber')) {
                obj['partNumber'] = ApiClient.convertToType(data['partNumber'], 'String');
            }
            if (data.hasOwnProperty('upc')) {
                obj['upc'] = ApiClient.convertToType(data['upc'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('orderID')) {
                obj['orderID'] = ApiClient.convertToType(data['orderID'], 'Number');
            }
            if (data.hasOwnProperty('orderItemID')) {
                obj['orderItemID'] = ApiClient.convertToType(data['orderItemID'], 'Number');
            }
            if (data.hasOwnProperty('shipmentID')) {
                obj['shipmentID'] = ApiClient.convertToType(data['shipmentID'], 'Number');
            }
            if (data.hasOwnProperty('locationCode')) {
                obj['locationCode'] = ApiClient.convertToType(data['locationCode'], 'String');
            }
            if (data.hasOwnProperty('previousOrderItemID')) {
                obj['previousOrderItemID'] = ApiClient.convertToType(data['previousOrderItemID'], 'Number');
            }
            if (data.hasOwnProperty('binID')) {
                obj['binID'] = ApiClient.convertToType(data['binID'], 'Number');
            }
            if (data.hasOwnProperty('blockAssignment')) {
                obj['blockAssignment'] = ApiClient.convertToType(data['blockAssignment'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * part number
 * @member {String} partNumber
 */
AllocateItem.prototype['partNumber'] = undefined;

/**
 * upc
 * @member {String} upc
 */
AllocateItem.prototype['upc'] = undefined;

/**
 * sku
 * @member {String} sku
 */
AllocateItem.prototype['sku'] = undefined;

/**
 * quantity
 * @member {Number} quantity
 */
AllocateItem.prototype['quantity'] = undefined;

/**
 * order ID
 * @member {Number} orderID
 */
AllocateItem.prototype['orderID'] = undefined;

/**
 * order item ID
 * @member {Number} orderItemID
 */
AllocateItem.prototype['orderItemID'] = undefined;

/**
 * shipment ID
 * @member {Number} shipmentID
 */
AllocateItem.prototype['shipmentID'] = undefined;

/**
 * location Code
 * @member {String} locationCode
 */
AllocateItem.prototype['locationCode'] = undefined;

/**
 * previous order item ID
 * @member {Number} previousOrderItemID
 */
AllocateItem.prototype['previousOrderItemID'] = undefined;

/**
 * Bin Location Identifier
 * @member {Number} binID
 */
AllocateItem.prototype['binID'] = undefined;

/**
 * Block assignment of item at product/location level. ONLY allowed on deallocate.
 * @member {Boolean} blockAssignment
 */
AllocateItem.prototype['blockAssignment'] = undefined;






export default AllocateItem;

