/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RequestLocation model module.
 * @module model/RequestLocation
 * @version 5.0
 */
class RequestLocation {
    /**
     * Constructs a new <code>RequestLocation</code>.
     * Request Location
     * @alias module:model/RequestLocation
     */
    constructor() { 
        
        RequestLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RequestLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestLocation} obj Optional instance to populate.
     * @return {module:model/RequestLocation} The populated <code>RequestLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestLocation();

            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
            if (data.hasOwnProperty('radius')) {
                obj['radius'] = ApiClient.convertToType(data['radius'], 'Number');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('countryCode')) {
                obj['countryCode'] = ApiClient.convertToType(data['countryCode'], 'String');
            }
            if (data.hasOwnProperty('locationCode')) {
                obj['locationCode'] = ApiClient.convertToType(data['locationCode'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Unit of distance used for radius
 * @member {module:model/RequestLocation.UnitEnum} unit
 * @default 'MILES'
 */
RequestLocation.prototype['unit'] = 'MILES';

/**
 * Distance from location
 * @member {Number} radius
 */
RequestLocation.prototype['radius'] = undefined;

/**
 * Postal Code of this location
 * @member {String} postalCode
 */
RequestLocation.prototype['postalCode'] = undefined;

/**
 * Latitude coordinate of this location
 * @member {Number} latitude
 */
RequestLocation.prototype['latitude'] = undefined;

/**
 * Longitude coordinate of this location
 * @member {Number} longitude
 */
RequestLocation.prototype['longitude'] = undefined;

/**
 * Country Code for this location
 * @member {String} countryCode
 */
RequestLocation.prototype['countryCode'] = undefined;

/**
 * Location Code for this location. This being set will trigger GetInventoryByLocation
 * @member {String} locationCode
 */
RequestLocation.prototype['locationCode'] = undefined;





/**
 * Allowed values for the <code>unit</code> property.
 * @enum {String}
 * @readonly
 */
RequestLocation['UnitEnum'] = {

    /**
     * value: "MILES"
     * @const
     */
    "MILES": "MILES",

    /**
     * value: "KM"
     * @const
     */
    "KM": "KM"
};



export default RequestLocation;

