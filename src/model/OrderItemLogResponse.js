/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderItemLogResponse model module.
 * @module model/OrderItemLogResponse
 * @version 5.0
 */
class OrderItemLogResponse {
    /**
     * Constructs a new <code>OrderItemLogResponse</code>.
     * OrderItem Log Response
     * @alias module:model/OrderItemLogResponse
     */
    constructor() { 
        
        OrderItemLogResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderItemLogResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderItemLogResponse} obj Optional instance to populate.
     * @return {module:model/OrderItemLogResponse} The populated <code>OrderItemLogResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderItemLogResponse();

            if (data.hasOwnProperty('orderID')) {
                obj['orderID'] = ApiClient.convertToType(data['orderID'], 'Number');
            }
            if (data.hasOwnProperty('orderItemID')) {
                obj['orderItemID'] = ApiClient.convertToType(data['orderItemID'], 'Number');
            }
            if (data.hasOwnProperty('shipmentID')) {
                obj['shipmentID'] = ApiClient.convertToType(data['shipmentID'], 'Number');
            }
            if (data.hasOwnProperty('inventoryID')) {
                obj['inventoryID'] = ApiClient.convertToType(data['inventoryID'], 'Number');
            }
            if (data.hasOwnProperty('tenantID')) {
                obj['tenantID'] = ApiClient.convertToType(data['tenantID'], 'Number');
            }
            if (data.hasOwnProperty('locationCode')) {
                obj['locationCode'] = ApiClient.convertToType(data['locationCode'], 'String');
            }
            if (data.hasOwnProperty('userID')) {
                obj['userID'] = ApiClient.convertToType(data['userID'], 'Number');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('resolved')) {
                obj['resolved'] = ApiClient.convertToType(data['resolved'], 'Boolean');
            }
            if (data.hasOwnProperty('fixed')) {
                obj['fixed'] = ApiClient.convertToType(data['fixed'], 'Boolean');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('partNumber')) {
                obj['partNumber'] = ApiClient.convertToType(data['partNumber'], 'String');
            }
            if (data.hasOwnProperty('upc')) {
                obj['upc'] = ApiClient.convertToType(data['upc'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Order Identifier
 * @member {Number} orderID
 */
OrderItemLogResponse.prototype['orderID'] = undefined;

/**
 * Order Item Identifier
 * @member {Number} orderItemID
 */
OrderItemLogResponse.prototype['orderItemID'] = undefined;

/**
 * Shipment Identifier
 * @member {Number} shipmentID
 */
OrderItemLogResponse.prototype['shipmentID'] = undefined;

/**
 * Inventory Identifier
 * @member {Number} inventoryID
 */
OrderItemLogResponse.prototype['inventoryID'] = undefined;

/**
 * Tenant Identifier
 * @member {Number} tenantID
 */
OrderItemLogResponse.prototype['tenantID'] = undefined;

/**
 * Location Code Identifier
 * @member {String} locationCode
 */
OrderItemLogResponse.prototype['locationCode'] = undefined;

/**
 * User Identifier
 * @member {Number} userID
 */
OrderItemLogResponse.prototype['userID'] = undefined;

/**
 * The number of items affected for this log entry
 * @member {Number} quantity
 */
OrderItemLogResponse.prototype['quantity'] = undefined;

/**
 * The type of logs to retrieve
 * @member {module:model/OrderItemLogResponse.TypeEnum} type
 */
OrderItemLogResponse.prototype['type'] = undefined;

/**
 * Whether this event is resolved
 * @member {Boolean} resolved
 */
OrderItemLogResponse.prototype['resolved'] = undefined;

/**
 * Whether this event has been fixed
 * @member {Boolean} fixed
 */
OrderItemLogResponse.prototype['fixed'] = undefined;

/**
 * The date of this log entry
 * @member {String} date
 */
OrderItemLogResponse.prototype['date'] = undefined;

/**
 * Part/Product Number
 * @member {String} partNumber
 */
OrderItemLogResponse.prototype['partNumber'] = undefined;

/**
 * Universal Product Code
 * @member {String} upc
 */
OrderItemLogResponse.prototype['upc'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
OrderItemLogResponse['TypeEnum'] = {

    /**
     * value: "ALLOCATE"
     * @const
     */
    "ALLOCATE": "ALLOCATE",

    /**
     * value: "DEALLOCATE"
     * @const
     */
    "DEALLOCATE": "DEALLOCATE",

    /**
     * value: "FULFILL"
     * @const
     */
    "FULFILL": "FULFILL",

    /**
     * value: "PICK"
     * @const
     */
    "PICK": "PICK"
};



export default OrderItemLogResponse;

