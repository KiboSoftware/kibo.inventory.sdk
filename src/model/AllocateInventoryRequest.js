/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AllocateItem from './AllocateItem';

/**
 * The AllocateInventoryRequest model module.
 * @module model/AllocateInventoryRequest
 * @version 5.0
 */
class AllocateInventoryRequest {
    /**
     * Constructs a new <code>AllocateInventoryRequest</code>.
     * Request needed for allocating inventory
     * @alias module:model/AllocateInventoryRequest
     * @param items {Array.<module:model/AllocateItem>} list of AllocateItems
     */
    constructor(items) { 
        
        AllocateInventoryRequest.initialize(this, items);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, items) { 
        obj['items'] = items;
    }

    /**
     * Constructs a <code>AllocateInventoryRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllocateInventoryRequest} obj Optional instance to populate.
     * @return {module:model/AllocateInventoryRequest} The populated <code>AllocateInventoryRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllocateInventoryRequest();

            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [AllocateItem]);
            }
            if (data.hasOwnProperty('orderDate')) {
                obj['orderDate'] = ApiClient.convertToType(data['orderDate'], 'String');
            }
            if (data.hasOwnProperty('orderWeight')) {
                obj['orderWeight'] = ApiClient.convertToType(data['orderWeight'], 'Number');
            }
            if (data.hasOwnProperty('decrementOnHandOnDeallocate')) {
                obj['decrementOnHandOnDeallocate'] = ApiClient.convertToType(data['decrementOnHandOnDeallocate'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * list of AllocateItems
 * @member {Array.<module:model/AllocateItem>} items
 */
AllocateInventoryRequest.prototype['items'] = undefined;

/**
 * order date
 * @member {String} orderDate
 */
AllocateInventoryRequest.prototype['orderDate'] = undefined;

/**
 * order weight
 * @member {Number} orderWeight
 */
AllocateInventoryRequest.prototype['orderWeight'] = undefined;

/**
 * flag to determine deallocation on decrements
 * @member {Boolean} decrementOnHandOnDeallocate
 */
AllocateInventoryRequest.prototype['decrementOnHandOnDeallocate'] = undefined;






export default AllocateInventoryRequest;

