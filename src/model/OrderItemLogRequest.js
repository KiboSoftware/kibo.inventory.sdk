/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderItemLogIdentifier from './OrderItemLogIdentifier';

/**
 * The OrderItemLogRequest model module.
 * @module model/OrderItemLogRequest
 * @version 5.0
 */
class OrderItemLogRequest {
    /**
     * Constructs a new <code>OrderItemLogRequest</code>.
     * OrderItem Log Request
     * @alias module:model/OrderItemLogRequest
     */
    constructor() { 
        
        OrderItemLogRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderItemLogRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderItemLogRequest} obj Optional instance to populate.
     * @return {module:model/OrderItemLogRequest} The populated <code>OrderItemLogRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderItemLogRequest();

            if (data.hasOwnProperty('identifiers')) {
                obj['identifiers'] = ApiClient.convertToType(data['identifiers'], [OrderItemLogIdentifier]);
            }
            if (data.hasOwnProperty('orderBy')) {
                obj['orderBy'] = ApiClient.convertToType(data['orderBy'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('sortAscending')) {
                obj['sortAscending'] = ApiClient.convertToType(data['sortAscending'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * A list of order item log identifiers to search for
 * @member {Array.<module:model/OrderItemLogIdentifier>} identifiers
 */
OrderItemLogRequest.prototype['identifiers'] = undefined;

/**
 * Order Identifier
 * @member {module:model/OrderItemLogRequest.OrderByEnum} orderBy
 */
OrderItemLogRequest.prototype['orderBy'] = undefined;

/**
 * The maximum number of results to return
 * @member {Number} limit
 */
OrderItemLogRequest.prototype['limit'] = undefined;

/**
 * The type of logs to retrieve
 * @member {module:model/OrderItemLogRequest.TypeEnum} type
 */
OrderItemLogRequest.prototype['type'] = undefined;

/**
 * Whether to sort results ascending, based on orderBy
 * @member {Boolean} sortAscending
 */
OrderItemLogRequest.prototype['sortAscending'] = undefined;





/**
 * Allowed values for the <code>orderBy</code> property.
 * @enum {String}
 * @readonly
 */
OrderItemLogRequest['OrderByEnum'] = {

    /**
     * value: "ORDER_ID"
     * @const
     */
    "ORDER_ID": "ORDER_ID",

    /**
     * value: "ORDER_ITEM_ID"
     * @const
     */
    "ORDER_ITEM_ID": "ORDER_ITEM_ID",

    /**
     * value: "INVENTORY_ID"
     * @const
     */
    "INVENTORY_ID": "INVENTORY_ID",

    /**
     * value: "TENANT_ID"
     * @const
     */
    "TENANT_ID": "TENANT_ID",

    /**
     * value: "LOCATION_ID"
     * @const
     */
    "LOCATION_ID": "LOCATION_ID",

    /**
     * value: "USER_ID"
     * @const
     */
    "USER_ID": "USER_ID",

    /**
     * value: "QUANTITY"
     * @const
     */
    "QUANTITY": "QUANTITY",

    /**
     * value: "TYPE"
     * @const
     */
    "TYPE": "TYPE",

    /**
     * value: "RESOLVED"
     * @const
     */
    "RESOLVED": "RESOLVED",

    /**
     * value: "FIXED"
     * @const
     */
    "FIXED": "FIXED",

    /**
     * value: "DATE"
     * @const
     */
    "DATE": "DATE",

    /**
     * value: "SHIPMENT_ID"
     * @const
     */
    "SHIPMENT_ID": "SHIPMENT_ID"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
OrderItemLogRequest['TypeEnum'] = {

    /**
     * value: "ALLOCATE"
     * @const
     */
    "ALLOCATE": "ALLOCATE",

    /**
     * value: "DEALLOCATE"
     * @const
     */
    "DEALLOCATE": "DEALLOCATE",

    /**
     * value: "FULFILL"
     * @const
     */
    "FULFILL": "FULFILL",

    /**
     * value: "PICK"
     * @const
     */
    "PICK": "PICK"
};



export default OrderItemLogRequest;

